{
    "WORKFLOW": {
        "UNAUTHORIZED": "Unauthorized!",
        "BPMN_EVENT": "Event",
        "BPMN_TASK": "Task",
        "BPMN_GETWAY": "Getway",
        "BPMN_STRUCTURAL": "Structural",
        "SETTING": "Setting",
        "SAVE": "Save",
        "TEST": "Test",
        "BACK": "Back",
        "CONFIRM": "Confirm",
        "CONFIRM_SAVE1": "Save data and back?",
        "CONFIRM_SAVE2": "Unsaved data will lose when click 'back'.",
        "CONFIRM_SAVE_BACK": "Save and back",
        "CONFIRM_BACK": "Back",
        "CREATE": "Create",
        "DELETE": "Delete",
        "START_EVENT": "Start",
        "PROCESS_VARIABLE": "Process Variable",
        "PROCESS_VARIABLE_DEFAULT": "Default Value",
        "PROCESS_VARIABLE_OPERATION": "Operation",
        "PROCESS_VARIABLE_CREATE": "Create",
        "PROCESS_VARIABLE_DELETE": "Delete",
        "END_EVENT": "End",
        "ERROR_START_EVENT": "Error Start",
        "ERROR_END_EVENT": "Error End",
        "TOSCA_TASK": "TOSCA",
        "REST_TASK": "REST",
        "SCRIPT_TASK": "SCRIPT",
        "TIMER_EVENT": "Timer",
        "EXCLUSIVE_GATEWAY": "Exclusive",
        "PARALLEL_GATEWAY": "Parallel",
        "SUB_PROCESS": "SubProcess",
        "NODE_NAME": "Name",
        "NODE_TYPE": "Type",
        "TOSCA_NODE": "Node",
        "TOSCA_INTERFACE": "Interface",
        "TOSCA_OPERATION": "Operation",
        "REST_SERVICE": "Service",
        "REST_PATH": "Path",
        "REST_METHOD": "Method",
        "TIMER_TYPE": "Type",
        "TIMER_DURATION": "Duration",
        "TIMER_DATE": "Date",
        "TIMER_CYCLE": "Cycle",
        "TIMER_YEAR": "Year",
        "TIMER_MONTH": "Month",
        "TIMER_DAY": "Day",
        "TIMER_HOUR": "Hour",
        "TIMER_MINUTE": "Minute",
        "TIMER_SECOND": "Second",
        "TIMER_CYCLE_INDEX": "Cycle Index",
        "CONNECTION_NAME": "Name",
        "CONNECTION_SOURCE": "Source",
        "CONNECTION_TARGET": "Target",
        "CONNECTION_CONDITION": "Condition",
        "SCRIPT_FORMAT": "Script Format",
        "SCRIPT": "Script",
        "SERVICE_CLASS": "Class",
        "SERVICE_INPUT": "Input Parameters",
        "SERVICE_OUTPUT": "Output Parameters",
        "REST_INPUT_QUERY": "Query Parameters",
        "REST_INPUT_HEADER": "Header Parameters",
        "REST_INPUT_PATH": "Path Parameters",
        "REST_INPUT_FORMDATA": "Formdata Parameters",
        "REST_INPUT_BODY": "Body Parameters",
        "REST_OUTPUT": "Output Parameters",
        "MSG": {
            "LOAD_FAIL": "Load data fail.",
            "SWAGGER_NOT_EXISTS": "Swagger did not exist, please check the 'swagger.json' or service status.",
            "SAVE_FAIL": "Save data fail.",
            "SAVE_SUCCESS": "Save successful.",
            "VARIABLE_EMPTY": "Variable Name should not be empty.",
            "VARIABLE_SAME": "Variable Name should not be same.",
            "PROCESS_VARIABLE_EMPTY": "Process Variable Name should not be empty.",
            "PROCESS_VARIABLE_SAME": "Process Variable Name should not be same.",
            "NODE_ID_SAME": "The node {{value}} is already exist."
        }
    },
    "VALIDATE": {
        "REQUIRED": "Value can't be empty",
        "MAX_LENGTH": "The length of the value can't be greater than {{value}}",
        "MIN_LENGTH": "The length of the value can't be less than {{value}}",
        "LENGTH": "The length of the value must equal to {{value}}",
        "IN_RANGE": "Value must be in range {{value}}",
        "INTEGER": "Value must be an integer",
        "FLOAT": "Value must be a float",
        "PATTERN": "Value must match the regular expression {{value}}",
        "GREATER_OR_EQUAL": "Value must be greater than or equal to {{value}}",
        "LESS_OR_EQUAL": "Value must be less than or equal to {{value}}",
        "GREATER_THAN": "Value must be greater than {{value}}",
        "LESS_THAN": "Value must be less than {{value}}",
        "EQUAL": "Value must equal to {{value}}",
        "CHARACTER_LIMIT": "Only the following characters: {{value}}",
        "CHARACTER_LENGTH": "Length {{value}}",
        "NOT_ALL_NUMBER": "Not all number",
        "FIRST_CHARACTER": "Begin with the letters or numbers"
    }
}
